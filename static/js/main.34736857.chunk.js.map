{"version":3,"sources":["components/StarWars.js","App.js","reportWebVitals.js","index.js"],"names":["StarWars","randomCharacter","randomNumber","Math","floor","random","url","fetch","then","response","json","data","setState","loaded","name","height","wikipedia","wiki","image","state","className","this","href","src","alt","onClick","type","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAmDeA,E,kDA/CX,aAAc,IAAD,8BACT,gBAUJC,gBAAkB,WACd,IAAMC,EAAeC,KAAKC,MAAoB,GAAdD,KAAKE,SAAY,GAC3CC,EAAI,gDAAD,OAAkDJ,EAAlD,SACTK,MAAMD,GACLE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,EAAKC,SAAS,CACVC,QAAQ,EACRC,KAAMH,EAAKG,KACXC,OAAQJ,EAAKI,OACbC,UAAWL,EAAKM,KAChBC,MAAOP,EAAKO,YApBpB,EAAKC,MAAM,CACPN,QAAQ,EACRC,KAAM,KACNC,OAAQ,KACRC,UAAW,KACXE,MAAO,MAPF,E,0CA0Bb,WACI,OAEI,sBAAKE,UAAU,YAAf,UAEIC,KAAKF,MAAMN,QACX,gCACA,wCAAWQ,KAAKF,MAAML,QACtB,0CAAaO,KAAKF,MAAMJ,OAAxB,SACA,6BAAI,mBAAGO,KAAMD,KAAKF,MAAMH,UAApB,yBACC,qBAAKI,UAAU,MAAf,SACD,qBAAKA,UAAU,SAASG,IAAKF,KAAKF,MAAMD,MAAOM,IAAI,UAIvD,wBAAQC,QAASJ,KAAKpB,gBAAiByB,KAAK,SAASN,UAAU,MAA/D,8B,GA1COO,IAAMC,WCOdC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.34736857.chunk.js","sourcesContent":["import React from 'react'\r\nimport './StarWars.css'\r\n\r\nclass StarWars extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            loaded: false,\r\n            name: null,\r\n            height: null,\r\n            wikipedia: null, \r\n            image: null\r\n        }\r\n    }\r\n\r\n    randomCharacter = () => {\r\n        const randomNumber = Math.floor(Math.random()*80+1)\r\n        const url= `https://akabab.github.io/starwars-api/api/id/${randomNumber}.json`\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data =>{\r\n            this.setState({\r\n                loaded: true,\r\n                name: data.name,\r\n                height: data.height,\r\n                wikipedia: data.wiki, \r\n                image: data.image,\r\n            })\r\n    })\r\n    }\r\n    render(){\r\n        return(\r\n           \r\n            <div className=\"container\">\r\n                {\r\n                this.state.loaded && \r\n                <div>\r\n                <h1>Name: {this.state.name}</h1>\r\n                <h1>Height: {this.state.height} cm</h1>\r\n                <h1><a href={this.state.wikipedia}>More info</a></h1>\r\n                     <div className=\"img\">\r\n                    <img className=\"image1\" src={this.state.image} alt=\"\" />\r\n                     </div>\r\n                </div>\r\n    }\r\n                <button onClick={this.randomCharacter} type=\"button\" className=\"btn\">Generuj !</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StarWars;","import StarWars from './components/StarWars';\n\nfunction App() {\n  return (\n    <div>\n      <StarWars />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}